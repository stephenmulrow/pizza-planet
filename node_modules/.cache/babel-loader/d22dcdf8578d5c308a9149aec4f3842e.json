{"ast":null,"code":"import _toConsumableArray from\"C:/Users/smulr/Documents/challenges/pizza-manager/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"C:/Users/smulr/Documents/challenges/pizza-manager/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/smulr/Documents/challenges/pizza-manager/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function App(){var _useState=useState(function(){var savedTodos=localStorage.getItem(\"todos\");if(savedTodos){return JSON.parse(savedTodos);}else{return[];}}),_useState2=_slicedToArray(_useState,2),todos=_useState2[0],setTodos=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),todo=_useState4[0],setTodo=_useState4[1];// boolean state to know if we are editing (this will let us display\n// different inputs based on a condition (conditional rendering)\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isEditing=_useState6[0],setIsEditing=_useState6[1];// object state to set so we know which todo item we are editing\nvar _useState7=useState({}),_useState8=_slicedToArray(_useState7,2),currentTodo=_useState8[0],setCurrentTodo=_useState8[1];useEffect(function(){localStorage.setItem(\"todos\",JSON.stringify(todos));},[todos]);function handleInputChange(e){setTodo(e.target.value);}// function to get the value of the edit input and set the new state\nfunction handleEditInputChange(e){// set the new state value to what's currently in the edit input box\nsetCurrentTodo(_objectSpread(_objectSpread({},currentTodo),{},{text:e.target.value}));console.log(currentTodo);}function handleFormSubmit(e){e.preventDefault();if(todo!==\"\"){setTodos([].concat(_toConsumableArray(todos),[{id:todos.length+1,text:todo.trim()}]));}setTodo(\"\");}function handleEditFormSubmit(e){e.preventDefault();handleUpdateTodo(currentTodo.id,currentTodo);}function handleDeleteClick(id){var removeItem=todos.filter(function(todo){return todo.id!==id;});setTodos(removeItem);}function handleUpdateTodo(id,updatedTodo){var updatedItem=todos.map(function(todo){return todo.id===id?updatedTodo:todo;});setIsEditing(false);setTodos(updatedItem);}function handleEditClick(todo){setIsEditing(true);setCurrentTodo(_objectSpread({},todo));}return/*#__PURE__*/_jsxs(\"div\",{className:\"pizzaName\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Available Toppings\"}),/*#__PURE__*/_jsx(\"h2\",{children:/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"pepporoni\"}),/*#__PURE__*/_jsx(\"li\",{children:\"bacon\"}),/*#__PURE__*/_jsx(\"li\",{children:\"mushroom\"}),/*#__PURE__*/_jsx(\"li\",{children:\"anchovies\"}),/*#__PURE__*/_jsx(\"li\",{children:\"spinach\"}),/*#__PURE__*/_jsx(\"li\",{children:\"peppers\"})]})}),isEditing?/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleEditFormSubmit,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Edit Todo\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"editTodo\",children:\"Edit topping: \"}),/*#__PURE__*/_jsx(\"input\",{name:\"editTodo\",type:\"text\",placeholder:\"Edit todo\",value:currentTodo.text,onChange:handleEditInputChange}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"buttons\",children:\"Update\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setIsEditing(false);},children:\"Cancel\"})]}):/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleFormSubmit,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Add Toppings to your Pizza from the list of available toppings\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"todo\",children:\"Add topping: \"}),/*#__PURE__*/_jsx(\"input\",{name:\"todo\",type:\"text\",placeholder:\"Name of topping\",value:todo,onChange:handleInputChange}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"buttons\",children:\"Add\"})]}),/*#__PURE__*/_jsx(\"ul\",{className:\"pizzaName\",children:todos.map(function(todo){return/*#__PURE__*/_jsxs(\"li\",{children:[todo.text,/*#__PURE__*/_jsx(\"button\",{className:\"buttons\",onClick:function onClick(){return handleEditClick(todo);},children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{className:\"buttons\",onClick:function onClick(){return handleDeleteClick(todo.id);},children:\"Delete\"})]},todo.id);})})]});}","map":{"version":3,"names":["React","useState","useEffect","App","savedTodos","localStorage","getItem","JSON","parse","todos","setTodos","todo","setTodo","isEditing","setIsEditing","currentTodo","setCurrentTodo","setItem","stringify","handleInputChange","e","target","value","handleEditInputChange","text","console","log","handleFormSubmit","preventDefault","id","length","trim","handleEditFormSubmit","handleUpdateTodo","handleDeleteClick","removeItem","filter","updatedTodo","updatedItem","map","handleEditClick"],"sources":["C:/Users/smulr/Documents/challenges/pizza-manager/src/components/Owner.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\n\r\n\r\nexport default function App() {\r\n  const [todos, setTodos] = useState(() => {\r\n    const savedTodos = localStorage.getItem(\"todos\");\r\n    if (savedTodos) {\r\n      return JSON.parse(savedTodos);\r\n    } else {\r\n      return [];\r\n    }\r\n  });\r\n  const [todo, setTodo] = useState(\"\");\r\n  // boolean state to know if we are editing (this will let us display\r\n  // different inputs based on a condition (conditional rendering)\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  // object state to set so we know which todo item we are editing\r\n  const [currentTodo, setCurrentTodo] = useState({});\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  function handleInputChange(e) {\r\n    setTodo(e.target.value);\r\n  }\r\n\r\n  // function to get the value of the edit input and set the new state\r\n  function handleEditInputChange(e) {\r\n    // set the new state value to what's currently in the edit input box\r\n    setCurrentTodo({ ...currentTodo, text: e.target.value });\r\n    console.log(currentTodo);\r\n  }\r\n\r\n  function handleFormSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (todo !== \"\") {\r\n      setTodos([\r\n        ...todos,\r\n        {\r\n          id: todos.length + 1,\r\n          text: todo.trim()\r\n        }\r\n      ]);\r\n    }\r\n\r\n    setTodo(\"\");\r\n  }\r\n\r\n  function handleEditFormSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    handleUpdateTodo(currentTodo.id, currentTodo);\r\n  }\r\n\r\n  function handleDeleteClick(id) {\r\n    const removeItem = todos.filter((todo) => {\r\n      return todo.id !== id;\r\n    });\r\n    setTodos(removeItem);\r\n  }\r\n  function handleUpdateTodo(id, updatedTodo) {\r\n    const updatedItem = todos.map((todo) => {\r\n      return todo.id === id ? updatedTodo : todo;\r\n    });\r\n    setIsEditing(false);\r\n    setTodos(updatedItem);\r\n  }\r\n  function handleEditClick(todo) {\r\n    setIsEditing(true);\r\n    setCurrentTodo({ ...todo });\r\n  }\r\n\r\n  return (\r\n    <div className=\"pizzaName\">\r\n      <h1>Available Toppings</h1>\r\n      <h2>\r\n        <ul>\r\n          <li>\r\n            pepporoni\r\n          </li>\r\n          <li>\r\n            bacon\r\n          </li>\r\n          <li>\r\n            mushroom\r\n          </li>\r\n          <li>\r\n            anchovies\r\n          </li>\r\n          <li>\r\n            spinach\r\n          </li>\r\n          <li>\r\n            peppers\r\n          </li>\r\n        </ul>\r\n      </h2>\r\n      {isEditing ? (\r\n        <form onSubmit={handleEditFormSubmit}>\r\n          <h2>Edit Todo</h2>\r\n          <label htmlFor=\"editTodo\">Edit topping: </label>\r\n          <input\r\n            name=\"editTodo\"\r\n            type=\"text\"\r\n            placeholder=\"Edit todo\"\r\n            value={currentTodo.text}\r\n            onChange={handleEditInputChange}\r\n          />\r\n          <button type=\"submit\" className=\"buttons\">Update</button>\r\n          <button onClick={() => setIsEditing(false)}>Cancel</button>\r\n        </form>\r\n      ) : (\r\n        <form onSubmit={handleFormSubmit}>\r\n          <h2>Add Toppings to your Pizza from the list of available toppings</h2>\r\n          <label htmlFor=\"todo\">Add topping: </label>\r\n          <input\r\n            name=\"todo\"\r\n            type=\"text\"\r\n            placeholder=\"Name of topping\"\r\n            value={todo}\r\n            onChange={handleInputChange}\r\n          />\r\n          <button type=\"submit\" className=\"buttons\">Add</button>\r\n        </form>\r\n      )}\r\n\r\n      <ul className=\"pizzaName\">\r\n        {todos.map((todo) => (\r\n          <li key={todo.id}>\r\n            {todo.text}\r\n            <button className=\"buttons\" onClick={() => handleEditClick(todo)}>Edit</button>\r\n            <button className=\"buttons\" onClick={() => handleDeleteClick(todo.id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}