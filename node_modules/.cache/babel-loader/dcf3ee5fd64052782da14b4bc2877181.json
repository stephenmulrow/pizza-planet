{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smulr\\\\Documents\\\\challenges\\\\pizza-manager\\\\src\\\\components\\\\Chef.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chef() {\n  _s();\n  const initialList = [{\n    id: \"a\",\n    name: \"Buzz Lightyear\",\n    description: \"cheese with pepporoni\"\n  }, {\n    id: \"b\",\n    name: \"Woody\",\n    description: \"bacon, sausage, and chicken\"\n  }, {\n    id: \"c\",\n    name: \"Andy's Room\",\n    description: \"peppers, onions, and spiach\"\n  }, {\n    id: \"c\",\n    name: \"Wild Bill\",\n    description: \"bbq pork, chicken, and hot sauce\"\n  }, {\n    id: \"c\",\n    name: \"Rex\",\n    description: \"peppers, chicken, and salami\"\n  }];\n  const [list, setList] = React.useState(initialList);\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n  function handleChange(event) {\n    setName(event.target.value);\n    // input field state\n  }\n\n  function handleToppings(event) {\n    setDescription(event.target.value);\n  }\n  function handleRemove(id) {\n    const newList = list.filter(name => {\n      return item.id !== id;\n    });\n    setList(newList);\n  }\n  function handleAdd() {\n    const newList = list.concat({\n      name\n    });\n    setList(newList);\n    // add item to list\n  }\n\n  function addTopping() {\n    const newTopping = list.concat({\n      description\n    });\n    setList(newTopping);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome Chef!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"First, take a look at our list of available Pizzas, and their respective toppings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: list.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 40\n        }, this), item.description, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRemove,\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"name of pizza\",\n      value: name,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleAdd,\n      children: \"Add Pizza\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"toppings on pizza\",\n      value: description,\n      onChange: handleToppings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: addTopping,\n      children: \"Add Toppings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Chef, \"XWz+Oi3OI3o87Azr9ZAG124FfYI=\");\n_c = Chef;\nvar _c;\n$RefreshReg$(_c, \"Chef\");","map":{"version":3,"names":["React","Chef","initialList","id","name","description","list","setList","useState","setName","setDescription","handleChange","event","target","value","handleToppings","handleRemove","newList","filter","item","handleAdd","concat","addTopping","newTopping","map"],"sources":["C:/Users/smulr/Documents/challenges/pizza-manager/src/components/Chef.js"],"sourcesContent":["import React from \"react\";\r\n\r\nexport default function Chef() {\r\n  const initialList = [\r\n    {\r\n      id: \"a\",\r\n      name: \"Buzz Lightyear\",\r\n      description: \"cheese with pepporoni\"\r\n    },\r\n    {\r\n      id: \"b\",\r\n      name: \"Woody\",\r\n      description: \"bacon, sausage, and chicken\"\r\n    },\r\n    {\r\n      id: \"c\",\r\n      name: \"Andy's Room\",\r\n      description: \"peppers, onions, and spiach\"\r\n    },\r\n    {\r\n      id: \"c\",\r\n      name: \"Wild Bill\",\r\n      description: \"bbq pork, chicken, and hot sauce\"\r\n    },\r\n    {\r\n      id: \"c\",\r\n      name: \"Rex\",\r\n      description: \"peppers, chicken, and salami\"\r\n    }\r\n  ];\r\n\r\n  const [list, setList] = React.useState(initialList)\r\n  const [name, setName] = React.useState('')\r\n  const [description, setDescription] = React.useState('')\r\n\r\n  function handleChange(event) {\r\n    setName(event.target.value)\r\n    // input field state\r\n  }\r\n\r\n  function handleToppings(event){\r\n    setDescription(event.target.value)\r\n  }\r\n\r\n  function handleRemove(id){\r\n    const newList = list.filter((name) => {\r\n      return item.id !== id});\r\n\r\n    setList(newList)\r\n  }\r\n\r\n  function handleAdd(){\r\n    const newList = list.concat({name})\r\n\r\n    setList(newList)\r\n    // add item to list\r\n  }\r\n\r\n  function addTopping(){\r\n    const newTopping = list.concat({description})\r\n\r\n    setList(newTopping)\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Welcome Chef!</h1>\r\n      <h2>First, take a look at our list of available Pizzas, and their respective toppings</h2>\r\n  \r\n      <ul>\r\n        {list.map((item) =>(\r\n          <li key={item.id}>{item.name}<br></br>{item.description}\r\n          <button onClick={handleRemove}>delete</button>\r\n          </li>\r\n          \r\n        ))}\r\n        \r\n      </ul>\r\n      <input type=\"text\" placeholder=\"name of pizza\" value={name} onChange={handleChange}/>\r\n      <button type=\"button\" onClick={handleAdd}>\r\n        Add Pizza\r\n      </button>\r\n      <input type=\"text\" placeholder=\"toppings on pizza\" value={description} onChange={handleToppings}/>\r\n      <button type=\"button\" onClick={addTopping}>\r\n        Add Toppings\r\n      </button>\r\n     \r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}